<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:viewModels="clr-namespace:MonkeyMusicCloud.Client.ViewModels">
   
    
    <Style TargetType="Label" BasedOn="{StaticResource {x:Type Label}}" x:Key="SongTimeSeparator">
        <Setter Property="Visibility" Value="Visible" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding TotalTime}" Value="{x:Null}">
                <Setter Property="Visibility" Value="Collapsed" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="PlayerButton" TargetType="{x:Type Button}" BasedOn="{x:Null}">
        <Setter Property="Margin" Value="5,0,5,0" />
        <Setter Property="Width" Value="48" />
        <Setter Property="Height" Value="48" />
        <Setter Property="FocusVisualStyle" Value="{DynamicResource NuclearButtonFocusVisual}" />
        <Setter Property="Background" Value="{DynamicResource NormalBrush}" />
        <Setter Property="Foreground" Value="{DynamicResource TextBrush}" />
        <Setter Property="BorderBrush" Value="{DynamicResource NormalBorderBrush}" />
        <Setter Property="Template" Value="{DynamicResource PlayerButtonTemplate}" />
    </Style>

    <Style TargetType="Button" BasedOn="{StaticResource PlayerButton}" x:Key="PlayPauseButtonStyle">
        <Setter Property="Margin" Value="5,0,5,0" />
        <Setter Property="Width" Value="48" />
        <Setter Property="Height" Value="48" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding PlayerState}">
                <DataTrigger.Value>
                    <viewModels:State>Stop</viewModels:State>
                </DataTrigger.Value>
                <Setter Property="Command" Value="{Binding PlaySongCommand }" />
                <Setter Property="CommandParameter" Value="{Binding ElementName=LvSongList, Path=SelectedItem }" />
            </DataTrigger>

            <DataTrigger Binding="{Binding PlayerState}">
                <DataTrigger.Value>
                    <viewModels:State>Pause</viewModels:State>
                </DataTrigger.Value>
                <Setter Property="Command" Value="{Binding ResumeSongCommand }" />
            </DataTrigger>

            <DataTrigger Binding="{Binding PlayerState}">
                <DataTrigger.Value>
                    <viewModels:State>Play</viewModels:State>
                </DataTrigger.Value>
                <Setter Property="Command" Value="{Binding PauseSongCommand }" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="Image" x:Key="PlayPauseImageStyle">
        <Setter Property="Width" Value="38" />
        <Setter Property="Height" Value="38" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding PlayerState}">
                <DataTrigger.Value>
                    <viewModels:State>Stop</viewModels:State>
                </DataTrigger.Value>
                <Setter Property="Source" Value="../../Themes/Images/PlayerPlay.png" />
            </DataTrigger>

            <DataTrigger Binding="{Binding PlayerState}">
                <DataTrigger.Value>
                    <viewModels:State>Pause</viewModels:State>
                </DataTrigger.Value>
                <Setter Property="Source" Value="../../Themes/Images/PlayerPlay.png" />
            </DataTrigger>

            <DataTrigger Binding="{Binding PlayerState}">
                <DataTrigger.Value>
                    <viewModels:State>Play</viewModels:State>
                </DataTrigger.Value>
                <Setter Property="Source" Value="../../Themes/Images/PlayerPause.png" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="ListViewItem" BasedOn="{StaticResource {x:Type ListViewItem}}" x:Key="ListViewItemStyle">
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
    </Style>

    <Style BasedOn="{StaticResource ImageClickable}" TargetType="Image" x:Key="RepeatImageStyle">
        <Setter Property="Source" Value="../Themes/Images/Repeat_off.png" />
        <Setter Property="Width" Value="25" />
        <Setter Property="Height" Value="25" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding Repeat}" Value="true">
                <Setter Property="Source" Value="../Themes/Images/Repeat_on.png" />
            </DataTrigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Source" Value="../Themes/Images/Repeat_hover.png"/>
            </Trigger>
        </Style.Triggers>
    </Style>



    <Style BasedOn="{StaticResource ImageClickable}" TargetType="Image" x:Key="ShuffleImageStyle">
        <Setter Property="Source" Value="../Themes/Images/Shuffle_off.png" />
        <Setter Property="Width" Value="25" />
        <Setter Property="Height" Value="25" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding Shuffle}" Value="true">
                <Setter Property="Source" Value="../Themes/Images/Shuffle_on.png" />
            </DataTrigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Source" Value="../Themes/Images/Shuffle_hover.png"/>
            </Trigger>
        </Style.Triggers>
    </Style>
</ResourceDictionary>